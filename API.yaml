swagger: '2.0'
info:
  description: |
    Design and implementation of an API to ease the use of HPC systems.
  version: 1.0.0
  title: HPC RESTful API using Slurm
  termsOfService: http://swagger.io/terms/
  contact:
    email: wajrcs@gmail.com
    name: Waqar Alamgir
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# host: HPC-RESTful.swagger.io
# basePath: /v2
tags:
- name: job
  description: Everything about HPC jobs
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: user
  description: Operations about users
  externalDocs:
    description: Find out more about our store
    url: http://swagger.io
# schemes:
# - http
paths:
  /job:
    get:
      tags:
      - job
      summary: Finds jobs, optionally by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findJobsByStatus
      produces:
      - application/json
      - application/xml
      parameters:
      - name: status
        in: query
        description: Status values that need to be considered for filter
        required: false
        type: array
        items:
          type: string
          enum:
          - new
          - in_progress
          - failed
          - aborted
          - completed
          default: new
        collectionFormat: multi
      responses:
        200:
          description: Successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Job'
        400:
          description: Invalid status value
        401:
          description: Unauthorized
      security:
      - hpc_auth:
        - read:jobs
    put:
      tags:
      - job
      summary: Schedules a new job to the HPC system
      operationId: addJob
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: Job object that needs to be added to the HPC system
        required: true
        schema:
          $ref: '#/definitions/Job'
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Job'
        405:
          description: Invalid input
        401:
          description: Unauthorized
      security:
      - hpc_auth:
        - write:jobs
  /job/{jobId}:
    get:
      tags:
      - job
      summary: Finds job by ID
      description: Returns a single job
      operationId: getJobById
      produces:
      - application/json
      - application/xml
      parameters:
      - name: jobId
        in: path
        description: ID of job to return
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: Invalid ID supplied
        404:
          description: Job not found
        401:
          description: Unauthorized
      security:
      - hpc_auth:
        - read:jobs
    put:
      tags:
      - job
      summary: Updates an existing job
      operationId: updateJob
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - name: jobId
        in: path
        description: name that need to be updated
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: Job object that needs to be added to the HPC system
        required: true
        schema:
          $ref: '#/definitions/Job'
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: Invalid ID supplied
        404:
          description: Job not found
        405:
          description: Validation exception
        401:
          description: Unauthorized
      security:
      - hpc_auth:
        - write:jobs
    delete:
      tags:
      - job
      summary: Deletes an existing job
      operationId: deleteJob
      produces:
      - application/json
      - application/xml
      parameters:
      - name: jobId
        in: path
        description: Job id to delete
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Successful operation
        400:
          description: Invalid ID supplied
        404:
          description: Job not found
        401:
          description: Unauthorized
      security:
      - hpc_auth:
        - write:jobs
  /user:
    put:
      tags:
      - user
      summary: Creates user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: Created user object
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/User'
        405:
          description: Invalid input
        401:
          description: Unauthorized
      security:
      - hpc_auth:
        - write:users
  /user/login:
    get:
      tags:
      - user
      summary: Logs user into the system
      operationId: loginUser
      produces:
      - application/json
      - application/xml
      parameters:
      - name: username
        in: query
        description: The user name for login
        required: true
        type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid username/password supplied
  /user/{username}:
    get:
      tags:
      - user
      summary: Gets a user by username
      operationId: getUserByName
      produces:
      - application/json
      - application/xml
      parameters:
      - name: username
        in: path
        description: The name that needs to be fetched.
        required: true
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid username supplied
        404:
          description: User not found
        401:
          description: Unauthorized
      security:
      - hpc_auth:
        - read:users
    put:
      tags:
      - user
      summary: Updates a user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
      - application/json
      - application/xml
      parameters:
      - name: username
        in: path
        description: name that need to be updated
        required: true
        type: string
      - in: body
        name: body
        description: Updated user object
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid user supplied
        404:
          description: User not found
        401:
          description: Unauthorized
      security:
      - hpc_auth:
        - write:users
    delete:
      tags:
      - user
      summary: Deletes a user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
      - application/json
      - application/xml
      parameters:
      - name: username
        in: path
        description: The name that needs to be deleted
        required: true
        type: string
      responses:
        200:
          description: Successful operation
        400:
          description: Invalid username supplied
        404:
          description: User not found
        401:
          description: Unauthorized
      security:
      - hpc_auth:
        - write:users
securityDefinitions:
  hpc_auth:
    type: oauth2
    authorizationUrl: http://hpc.swagger.io/oauth/dialog
    flow: implicit
    scopes:
      write:jobs: Modify and create jobs
      read:jobs: Read jobs
      write:users: Modify and create users in user API accounts
      read:users: Read jobs
definitions:
  User:
    type: object
    required:
    - username
    - firstName
    - lastName
    - email
    - password
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      token:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
        enum:
        - active
        - inactive
        - blocked
    xml:
      name: User
  Job:
    type: object
    required:
    - name
    - command
    - userId
    properties:
      id:
        type: integer
        format: int64
      userId:
        type: integer
        format: int64
      name:
        type: string
      command:
        type: string
      metaData:
        type: string
      created:
        type: string
        format: date-time
      updated:
        type: string
        format: date-time
      result:
        type: string
      log:
        type: string
      status:
        type: integer
        format: int32
        description: Job Status
        enum:
        - new
        - in_progress
        - failed
        - aborted
        - completed
    xml:
      name: Job
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
# basePath: /Master-Thesis/SlurmRESTful/1.0.0
schemes:
 - https
 - http
# Added by API Auto Mocking Plugin
basePath: /Master-Thesis/HPC-RESTful/1.0.0
